package bot

import (
	"log"
	"sync"

	"github.com/PaulSonOfLars/gotgbot/v2"
)

type Lang string

const (
	LangEN Lang = "en"
	LangRU Lang = "ru"
)

var langPrefs = struct {
	mu    sync.RWMutex
	byUID map[int64]Lang
}{
	byUID: make(map[int64]Lang),
}

func setUserLang(userID int64, l Lang) {
	langPrefs.mu.Lock()
	langPrefs.byUID[userID] = l
	langPrefs.mu.Unlock()
}

func getUserLang(userID int64) Lang {
	langPrefs.mu.RLock()
	l, ok := langPrefs.byUID[userID]
	langPrefs.mu.RUnlock()
	if ok {
		return l
	}
	// default to EN if not set
	return LangEN
}

// i18n dictionaries
var i18n = map[Lang]map[string]string{
	LangEN: {
		"settings.title":                     "‚öôÔ∏è Settings",
		"settings.current_mode":              "‚Ä¢ Download mode: *%s*",
		"settings.current_lang":              "‚Ä¢ Language: %s",
		"settings.choose_mode":               "üéõ Choose download mode",
		"settings.back":                      "‚¨ÖÔ∏è Back",
		"settings.mode.caption":              "Download mode:",
		"settings.mode.caption.friendly":     "Pick how to save albums:",
		"settings.mode.saved":                "Saved mode: %s",
		"settings.mode.saved.friendly":       "‚úÖ Mode saved: %s",
		"settings.unknown_action":            "Unknown action.",
		"settings.language":                  "üåç Choose language",
		"settings.language.caption":          "Language:",
		"settings.language.caption.friendly": "Pick your language:",
		"settings.language.saved":            "Language saved: %s",
		"settings.language.saved.friendly":   "‚úÖ Language set to: %s",
		"mode.media":                         "media",
		"mode.files":                         "files",
		"mode.ask":                           "ask",
		"settings.quality":                   "Media quality",
		"settings.quality.caption":           "Media quality:",
		"settings.quality.saved":             "Saved quality: %s",
		"quality.ask":                        "ask",
		"quality.original":                   "original",
		"quality.high":                       "high",
		"quality.low":                        "low",
		"album.ask":                          "Send album as media or files?",
		"album.button.media":                 "Media",
		"album.button.file":                  "Files",
		"msg.request_post":                   "Drop a Reddit link here ‚Äî I‚Äôll fetch it ‚ú®",
		"msg.no_media_found":                 "Hmm, no media found in that post.",
		"msg.select_quality":                 "Choose the quality:",
		"err.panic":                          "Something went wrong (panic).",
		"err.broken_callback":                "Broken callback data.",
		"err.resend_link":                    "Please resend the link.",
		"err.internal":                       "Internal error.",
		"unknown.type":                       "Unknown type (please report it on GitHub).",
		"cmd.start":                          "Welcome! This bot downloads media from Reddit posts ‚Äî just send me a link, for example:\nhttps://www.reddit.com/r/TheCatternet/comments/1nrw9xt/she_grow_up/\n\nCommands:\n/start ‚Äî start\n/settings ‚Äî settings\n/help ‚Äî help",
		"cmd.help":                           "Send a Reddit link. Text becomes text; images/videos get uploaded with title & link.",
		"cmd.desc.start":                     "Start the bot",
		"cmd.desc.help":                      "How to use the bot",
		"cmd.desc.settings":                  "Open settings",
	},
	LangRU: {
		"settings.title":                     "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
		"settings.current_mode":              "‚Ä¢ –†–µ–∂–∏–º —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: *%s*",
		"settings.current_lang":              "‚Ä¢ –Ø–∑—ã–∫: %s",
		"settings.choose_mode":               "üéõ –í—ã–±—Ä–∞—Ç—å —Ä–µ–∂–∏–º —Å–∫–∞—á–∏–≤–∞–Ω–∏—è",
		"settings.back":                      "‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
		"settings.mode.caption":              "–†–µ–∂–∏–º —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:",
		"settings.mode.caption.friendly":     "–ö–∞–∫ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∞–ª—å–±–æ–º—ã?",
		"settings.mode.saved":                "–†–µ–∂–∏–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω: %s",
		"settings.mode.saved.friendly":       "‚úÖ –†–µ–∂–∏–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω: %s",
		"settings.unknown_action":            "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.",
		"settings.language":                  "üåç –í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫",
		"settings.language.caption":          "–Ø–∑—ã–∫:",
		"settings.language.caption.friendly": "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:",
		"settings.language.saved":            "–Ø–∑—ã–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω: %s",
		"settings.language.saved.friendly":   "‚úÖ –Ø–∑—ã–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: %s",
		"mode.media":                         "–ú–µ–¥–∏–∞",
		"mode.files":                         "–§–∞–π–ª—ã",
		"mode.ask":                           "–°–ø—Ä–∞—à–∏–≤–∞—Ç—å",
		"settings.quality":                   "–ö–∞—á–µ—Å—Ç–≤–æ –º–µ–¥–∏–∞",
		"settings.quality.caption":           "–ö–∞—á–µ—Å—Ç–≤–æ –º–µ–¥–∏–∞:",
		"settings.quality.saved":             "–ö–∞—á–µ—Å—Ç–≤–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: %s",
		"quality.ask":                        "—Å–ø—Ä–∞—à–∏–≤–∞—Ç—å",
		"quality.original":                   "–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ",
		"quality.high":                       "–≤—ã—Å–æ–∫–æ–µ",
		"quality.low":                        "–Ω–∏–∑–∫–æ–µ",

		"settings.link":         "–ü—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å —Å—Å—ã–ª–∫—É",
		"settings.link.caption": "–°—Å—ã–ª–∫–∞ –∫ –ø–æ—Å—Ç—É:",
		"settings.link.saved":   "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: %s",
		"link.on":               "–¥–∞",
		"link.off":              "–Ω–µ—Ç",
		"album.ask":             "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ª—å–±–æ–º –∫–∞–∫ –º–µ–¥–∏–∞ –∏–ª–∏ —Ñ–∞–π–ª–∞–º–∏?",
		"album.button.media":    "–ú–µ–¥–∏–∞",
		"album.button.file":     "–§–∞–π–ª—ã",
		"msg.request_post":      "–ö–∏–¥–∞–π —Å—Å—ã–ª–∫—É –Ω–∞ Reddit ‚Äî –≤—Å—ë –ø—Ä–∏–Ω–µ—Å—É ‚ú®",
		"msg.no_media_found":    "–ü–æ—Ö–æ–∂–µ, –≤ –ø–æ—Å—Ç–µ –Ω–µ—Ç –º–µ–¥–∏–∞.",
		"msg.select_quality":    "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—á–µ—Å—Ç–≤–æ:",
		"err.panic":             "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ (panic).",
		"err.broken_callback":   "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ callback-–¥–∞–Ω–Ω—ã–µ.",
		"err.resend_link":       "–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –µ—â—ë —Ä–∞–∑.",
		"err.internal":          "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞.",
		"unknown.type":          "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø (—Å–æ–æ–±—â–∏—Ç–µ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏).",
		"cmd.start":             "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ë–æ—Ç —É–º–µ–µ—Ç —Å–∫–∞—á–∏–≤–∞—Ç—å –º–µ–¥–∏–∞ –∏–∑ –ø–æ—Å—Ç–æ–≤ Reddit ‚Äî –ø—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ –º–Ω–µ —Å—Å—ã–ª–∫—É, –Ω–∞–ø—Ä–∏–º–µ—Ä:\nhttps://www.reddit.com/r/TheCatternet/comments/1nrw9xt/she_grow_up/\n\n–ö–æ–º–∞–Ω–¥—ã:\n/start ‚Äî —Å—Ç–∞—Ä—Ç\n/settings ‚Äî –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n/help ‚Äî –ø–æ–º–æ—â—å",
		"cmd.help":              "–ü—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ Reddit. –¢–µ–∫—Å—Ç ‚Äî —Ç–µ–∫—Å—Ç–æ–º, –∫–∞—Ä—Ç–∏–Ω–∫–∏/–≤–∏–¥–µ–æ ‚Äî –∑–∞–≥—Ä—É–∂—É —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ —Å—Å—ã–ª–∫–æ–π.",
		"cmd.desc.start":        "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞",
		"cmd.desc.help":         "–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º",
		"cmd.desc.settings":     "–û—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏",
	},
}

func tr(l Lang, key string) string {
	if m, ok := i18n[l]; ok {
		if s, ok2 := m[key]; ok2 {
			return s
		}
	}
	// fallback to EN
	v := i18n[LangEN][key]
	if v == "" {
		return key
	}
	return v
}

func t(uid int64, key string) string {
	return tr(getUserLang(uid), key)
}

// ----- Bot commands (per-language) -----
func commandsFor(lang Lang) []gotgbot.BotCommand {
	return []gotgbot.BotCommand{
		{Command: "start", Description: tr(lang, "cmd.desc.start")},
		{Command: "settings", Description: tr(lang, "cmd.desc.settings")},
		{Command: "help", Description: tr(lang, "cmd.desc.help")},
	}
}

func installCommands(bot *gotgbot.Bot) {
	if _, err := bot.SetMyCommands(commandsFor(LangEN), &gotgbot.SetMyCommandsOpts{
		Scope:        gotgbot.BotCommandScopeDefault{},
		LanguageCode: "",
	}); err != nil {
		log.Println("SetMyCommands (default) failed:", err)
	}
	if _, err := bot.SetMyCommands(commandsFor(LangEN), &gotgbot.SetMyCommandsOpts{
		Scope:        gotgbot.BotCommandScopeDefault{},
		LanguageCode: "en",
	}); err != nil {
		log.Println("SetMyCommands (en) failed:", err)
	}
	if _, err := bot.SetMyCommands(commandsFor(LangRU), &gotgbot.SetMyCommandsOpts{
		Scope:        gotgbot.BotCommandScopeDefault{},
		LanguageCode: "ru",
	}); err != nil {
		log.Println("SetMyCommands (ru) failed:", err)
	}
}
